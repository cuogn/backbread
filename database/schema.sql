-- B√°nh M√¨ S∆°n Database Schema
-- PostgreSQL Database Schema

-- B·∫£ng categories (Danh m·ª•c s·∫£n ph·∫©m)
CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- B·∫£ng products (S·∫£n ph·∫©m)
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    image_url VARCHAR(500),
    category_id INTEGER,
    is_available BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL
);

-- B·∫£ng branches (Chi nh√°nh)
CREATE TABLE branches (
    id SERIAL PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    address TEXT NOT NULL,
    phone VARCHAR(20) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- B·∫£ng customers (Kh√°ch h√†ng)
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    phone VARCHAR(20) NOT NULL UNIQUE,
    email VARCHAR(200),
    address TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- B·∫£ng payment_methods (Ph∆∞∆°ng th·ª©c thanh to√°n)
CREATE TABLE payment_methods (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(50) NOT NULL UNIQUE,
    icon VARCHAR(10),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- B·∫£ng admin_users (Qu·∫£n tr·ªã vi√™n)
CREATE TABLE admin_users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(200) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    full_name VARCHAR(200) NOT NULL,
    role VARCHAR(20) DEFAULT 'admin' CHECK (role IN ('admin', 'manager')),
    is_active BOOLEAN DEFAULT TRUE,
    last_login TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- B·∫£ng orders (ƒê∆°n h√†ng)
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    order_code VARCHAR(50) NOT NULL UNIQUE,
    customer_id INTEGER NOT NULL,
    branch_id INTEGER NOT NULL,
    payment_method_id INTEGER NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'confirmed', 'preparing', 'delivering', 'completed', 'cancelled')),
    customer_name VARCHAR(200) NOT NULL,
    customer_phone VARCHAR(20) NOT NULL,
    customer_email VARCHAR(200),
    delivery_address TEXT NOT NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE CASCADE,
    FOREIGN KEY (branch_id) REFERENCES branches(id) ON DELETE RESTRICT,
    FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id) ON DELETE RESTRICT
);

-- B·∫£ng order_items (Chi ti·∫øt ƒë∆°n h√†ng)
CREATE TABLE order_items (
    id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    product_name VARCHAR(200) NOT NULL,
    product_price DECIMAL(10,2) NOT NULL,
    quantity INTEGER NOT NULL DEFAULT 1,
    subtotal DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE RESTRICT
);

-- T·∫°o indexes cho products
CREATE INDEX idx_products_category ON products(category_id);
CREATE INDEX idx_products_available ON products(is_available);

-- T·∫°o index cho branches
CREATE INDEX idx_branches_active ON branches(is_active);

-- T·∫°o indexes cho customers
CREATE INDEX idx_customers_phone ON customers(phone);
CREATE INDEX idx_customers_email ON customers(email);

-- T·∫°o indexes cho admin_users
CREATE INDEX idx_admin_users_username ON admin_users(username);
CREATE INDEX idx_admin_users_email ON admin_users(email);
CREATE INDEX idx_admin_users_active ON admin_users(is_active);

-- T·∫°o indexes cho orders
CREATE INDEX idx_orders_order_code ON orders(order_code);
CREATE INDEX idx_orders_customer ON orders(customer_id);
CREATE INDEX idx_orders_branch ON orders(branch_id);
CREATE INDEX idx_orders_status ON orders(status);
CREATE INDEX idx_orders_created_at ON orders(created_at);

-- T·∫°o indexes cho order_items
CREATE INDEX idx_order_items_order ON order_items(order_id);
CREATE INDEX idx_order_items_product ON order_items(product_id);

-- T·∫°o function ƒë·ªÉ t·ª± ƒë·ªông c·∫≠p nh·∫≠t updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $func$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$func$ language plpgsql;

-- T·∫°o triggers ƒë·ªÉ t·ª± ƒë·ªông c·∫≠p nh·∫≠t updated_at
CREATE TRIGGER update_categories_updated_at BEFORE UPDATE ON categories FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_products_updated_at BEFORE UPDATE ON products FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_branches_updated_at BEFORE UPDATE ON branches FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_customers_updated_at BEFORE UPDATE ON customers FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_payment_methods_updated_at BEFORE UPDATE ON payment_methods FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_admin_users_updated_at BEFORE UPDATE ON admin_users FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_orders_updated_at BEFORE UPDATE ON orders FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Insert d·ªØ li·ªáu m·∫´u

-- Categories
INSERT INTO categories (name, description) VALUES
('B√°nh M√¨ Th·ªãt', 'C√°c lo·∫°i b√°nh m√¨ v·ªõi th·ªãt ngu·ªôi, pate'),
('B√°nh M√¨ Ch·∫£ C√°', 'B√°nh m√¨ v·ªõi ch·∫£ c√° Nha Trang'),
('B√°nh M√¨ ƒê·∫∑c Bi·ªát', 'B√°nh m√¨ v·ªõi nhi·ªÅu lo·∫°i nh√¢n ƒë·∫∑c bi·ªát'),
('B√°nh M√¨ Chay', 'B√°nh m√¨ chay cho ng∆∞·ªùi ƒÉn chay'),
('X√¥i', 'C√°c lo·∫°i x√¥i v√† m√≥n ƒÉn s√°ng kh√°c');

-- Payment Methods
INSERT INTO payment_methods (name, code, icon) VALUES
('Thanh to√°n khi nh·∫≠n h√†ng (COD)', 'cod', 'üíµ'),
('V√≠ MoMo', 'momo', 'üì±'),
('VNPay', 'vnpay', 'üí≥');

-- Admin Users (M·∫≠t kh·∫©u: 123 - ƒë√£ hash b·∫±ng bcrypt)
INSERT INTO admin_users (username, email, password, full_name, role) VALUES
('admin', 'admin@banhmi-son.com', '$2a$10$BWU.Z0pRPvhW/IJ8jaUHlutGsfwtGFYW0DwXVSqcjvelCxgSCovhq', 'Qu·∫£n tr·ªã vi√™n', 'admin'),
('manager', 'manager@banhmi-son.com', '$2a$10$BWU.Z0pRPvhW/IJ8jaUHlutGFYW0DwXVSqcjvelCxgSCovhq', 'Qu·∫£n l√Ω c·ª≠a h√†ng', 'manager');

-- Branches
INSERT INTO branches (name, address, phone) VALUES
('Chi nh√°nh N√∫i Hi·ªÉu', 'Kiot S·ªë 5, N√∫i Hi·ªÉu, N·∫ønh, B·∫Øc Ninh', '0332613116'),
('Chi nh√°nh N√∫i Hi·ªÉu 2', 'Kiot S·ªë 1, N√∫i Hi·ªÉu, N·∫ønh, B·∫Øc Ninh', '0332613116'),
('Chi nh√°nh N√∫i Hi·ªÉu 3', 'Kiot S·ªë 1, N√∫i Hi·ªÉu, N·∫ønh, B·∫Øc Ninh', '0332613116');

-- Products
INSERT INTO products (name, description, price, image_url, category_id) VALUES
('B√°nh M√¨ Pate c·ªôt ƒë√®n', 'B√°nh m√¨ gi√≤n v·ªõi pate c·ªôt ƒë√®n th∆°m l·ª´ng, rau s·ªëng t∆∞∆°i m√°t v√† n∆∞·ªõc s·ªët ƒë·∫∑c bi·ªát', 25000, 'https://images.unsplash.com/photo-1558030006-450675393462?w=400&h=300&fit=crop', 1),
('B√°nh M√¨ Ch·∫£ C√°', 'B√°nh m√¨ v·ªõi ch·∫£ c√° Nha Trang ƒë·∫≠m ƒë√†, th√™m rau th∆°m v√† t∆∞∆°ng ·ªõt', 30000, 'https://images.unsplash.com/photo-1509440159596-0249088772ff?w=400&h=300&fit=crop', 2),
('B√°nh M√¨ Ch·∫£ c√° ƒê·∫∑c Bi·ªát', 'B√°nh m√¨ v·ªõi ƒë·∫ßy ƒë·ªß ch·∫£ l·ª•a, th·ªãt ngu·ªôi, pate, tr·ª©ng ·ªëp la v√† rau s·ªëng', 35000, 'https://images.unsplash.com/photo-1509440159596-0249088772ff?w=400&h=300&fit=crop', 3),
('B√°nh M√¨ Pate ch·∫£ c√° c·ªôt ƒë√®n', 'B√°nh m√¨ truy·ªÅn th·ªëng v·ªõi pate gan, ch·∫£ l·ª•a v√† rau c·ªß t∆∞∆°i ngon', 20000, 'https://images.unsplash.com/photo-1551024601-bec78aea704b?w=400&h=300&fit=crop', 2),
('X√¥i x√©o', 'B√°nh m√¨ v·ªõi x√≠u m·∫°i t·ª± l√†m, n∆∞·ªõc s·ªët c√† chua ƒë·∫≠m ƒë√†', 28000, 'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=400&h=300&fit=crop', 5),
('X√¥i th·∫≠p c·∫©m', 'Ch·∫£ c√° Nha Trang nguy√™n ch·∫•t, b√°nh m√¨ gi√≤n r·ª•m, rau th∆°m ƒë·∫ßy ƒë·ªß', 32000, 'https://images.unsplash.com/photo-1546833999-b9f581a1996d?w=400&h=300&fit=crop', 5),
('X√¥i Ch·∫£ c√°', 'Th·ªãt g√† n∆∞·ªõng th∆°m ph·ª©c, ∆∞·ªõp gia v·ªã ƒë·∫∑c tr∆∞ng v·ªõi rau s·ªëng t∆∞∆°i m√°t', 30000, 'https://images.unsplash.com/photo-1594212699903-ec8a3eca50f5?w=400&h=300&fit=crop', 5),
('Kem x√¥i', 'B√°nh m√¨ v·ªõi tr·ª©ng ·ªëp la, ch·∫£ l·ª•a v√† rau s·ªëng, ph√π h·ª£p cho b·ªØa s√°ng', 22000, 'https://images.unsplash.com/photo-1571091718767-18b5b1457add?w=400&h=300&fit=crop', 5),
('B√°nh M√¨ Chay', 'B√°nh m√¨ chay v·ªõi ƒë·∫≠u h≈© chi√™n, rau s·ªëng v√† n∆∞·ªõc m·∫Øm chay', 18000, 'https://images.unsplash.com/photo-1504674900247-0877df9cc836?w=400&h=300&fit=crop', 4),
('B√°nh M√¨ B√≤ Kho', 'B√°nh m√¨ v·ªõi b√≤ kho ƒë·∫≠m ƒë√†, th∆°m l·ª´ng gia v·ªã 5 h∆∞∆°ng', 35000, 'https://images.unsplash.com/photo-1555939594-58d7cb561ad1?w=400&h=300&fit=crop', 3);
